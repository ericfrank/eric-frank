{"version":3,"sources":["util/words.js","util/shuffle.js","util/stateManagement.js","util/clipboard.js","App.js","index.js"],"names":["split","filter","word","shuffle","a","j","x","i","length","Math","floor","random","getRandomTeam","stateTeamCards","randomTeam","Object","keys","some","key","getNewState","firstTeam","1","2","3","getTeamCards","wordList","words","map","index","slice","team","active","result","answerKey","saveStateToUrl","getStateFromUrl","hash","document","location","search","concat","replace","wordIndex","parseInt","getStartingState","newGame","stateToHash","join","teams","answerKeyBinary","state","newurl","origin","pathname","window","history","pushState","path","copyToClipboard","str","el","createElement","value","body","appendChild","select","execCommand","removeChild","App","props","handleSetActive","setState","handleNewGame","className","handleCopyCodemasterLink","clipboard","linkCopied","setTimeout","this","getTeamCardsRemaining","teamOneRemaining","teamTwoRemaining","teamOneWinner","teamTwoWinner","death","winner","title","classList","add","type","onClick","disabled","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66a79f08.chunk.js","sourcesContent":["export default `\nAcne\nAcre\nAddendum\nAdvertise\nAircraft\nAisle\nAlligator\nAlphabetize\nAmerica\nAnkle\nApathy\nApplause\nApplesauce\nApplication\nArchaeologist\nAristocrat\nArm\nArmada\nAsleep\nAstronaut\nAthlete\nAtlantis\nAunt\nAvocado\nBabysitter\nBackbone\nBag\nBaguette\nBald\nBalloon\nBanana\nBanister\nBaseball\nBaseboards\nBasketball\nBat\nBattery\nBeach\nBeanstalk\nBedbug\nBeer\nBeethoven\nBelt\nBib\nBicycle\nBig\nBike\nBillboard\nBird\nBirthday\nBite\nBlacksmith\nBlanket\nBleach\nBlimp\nBlossom\nBlueprint\nBlunt\nBlur\nBoa\nBoat\nBob\nBobsled\nBody\nBomb\nBonnet\nBook\nBooth\nBowtie\nBox\nBoy\nBrainstorm\nBrand\nBrave\nBride\nBridge\nBroccoli\nBroken\nBroom\nBruise\nBrunette\nBubble\nBuddy\nBuffalo\nBulb\nBunny\nBus\nBuy\nCabin\nCafeteria\nCake\nCalculator\nCampsite\nCan\nCanada\nCandle\nCandy\nCape\nCapitalism\nCar\nCardboard\nCartography\nCat\nCd\nCeiling\nCell\nCentury\nChair\nChalk\nChampion\nCharger\nCheerleader\nChef\nChess\nChew\nChicken\nChime\nChina\nChocolate\nChurch\nCircus\nClay\nCliff\nCloak\nClockwork\nClown\nClue\nCoach\nCoal\nCoaster\nCog\nCold\nCollege\nComfort\nComputer\nCone\nConstrictor\nContinuum\nConversation\nCook\nCoop\nCord\nCorduroy\nCot\nCough\nCow\nCowboy\nCrayon\nCream\nCrisp\nCriticize\nCrow\nCruise\nCrumb\nCrust\nCuff\nCurtain\nCuticle\nCzar\nDad\nDart\nDawn\nDay\nDeep\nDefect\nDent\nDentist\nDesk\nDictionary\nDimple\nDirty\nDismantle\nDitch\nDiver\nDoctor\nDog\nDoghouse\nDoll\nDominoes\nDoor\nDot\nDrain\nDraw\nDream\nDress\nDrink\nDrip\nDrums\nDryer\nDuck\nDump\nDunk\nDust\nEar\nEat\nEbony\nElbow\nElectricity\nElephant\nElevator\nElf\nElm\nEngine\nEngland\nErgonomic\nEscalator\nEureka\nEurope\nEvolution\nExtension\nEyebrow\nFan\nFancy\nFast\nFeast\nFence\nFeudalism\nFiddle\nFigment\nFinger\nFire\nFirst\nFishing\nFix\nFizz\nFlagpole\nFlannel\nFlashlight\nFlock\nFlotsam\nFlower\nFlu\nFlush\nFlutter\nFog\nFoil\nFootball\nForehead\nForever\nFortnight\nFrance\nFreckle\nFreight\nFringe\nFrog\nFrown\nGallop\nGame\nGarbage\nGarden\nGasoline\nGem\nGinger\nGingerbread\nGirl\nGlasses\nGoblin\nGold\nGoodbye\nGrandpa\nGrape\nGrass\nGratitude\nGray\nGreen\nGuitar\nGum\nGumball\nHair\nHalf\nHandle\nHandwriting\nHang\nHappy\nHat\nHatch\nHeadache\nHeart\nHedge\nHelicopter\nHem\nHide\nHill\nHockey\nHomework\nHonk\nHopscotch\nHorse\nHose\nHot\nHouse\nHouseboat\nHug\nHumidifier\nHungry\nHurdle\nHurt\nHut\nIce\nImplode\nInn\nInquisition\nIntern\nInternet\nInvitation\nIronic\nIvory\nIvy\nJade\nJapan\nJeans\nJelly\nJet\nJig\nJog\nJournal\nJump\nKey\nKiller\nKilogram\nKing\nKitchen\nKite\nKnee\nKneel\nKnife\nKnight\nKoala\nLace\nLadder\nLadybug\nLag\nLandfill\nLap\nLaugh\nLaundry\nLaw\nLawn\nLawnmower\nLeak\nLeg\nLetter\nLevel\nLifestyle\nLigament\nLight\nLightsaber\nLime\nLion\nLizard\nLog\nLoiterer\nLollipop\nLoveseat\nLoyalty\nLunch\nLunchbox\nLyrics\nMachine\nMacho\nMailbox\nMammoth\nMark\nMars\nMascot\nMast\nMatchstick\nMate\nMattress\nMess\nMexico\nMidsummer\nMine\nMistake\nModern\nMold\nMom\nMonday\nMoney\nMonitor\nMonster\nMooch\nMoon\nMop\nMoth\nMotorcycle\nMountain\nMouse\nMower\nMud\nMusic\nMute\nNature\nNegotiate\nNeighbor\nNest\nNeutron\nNiece\nNight\nNightmare\nNose\nOar\nObservatory\nOffice\nOil\nOld\nOlympian\nOpaque\nOpener\nOrbit\nOrgan\nOrganize\nOuter\nOutside\nOvation\nOverture\nPail\nPaint\nPajamas\nPalace\nPants\nPaper\nPaper\nPark\nParody\nParty\nPassword\nPastry\nPawn\nPear\nPen\nPencil\nPendulum\nPenny\nPepper\nPersonal\nPhilosopher\nPhone\nPhotograph\nPiano\nPicnic\nPigpen\nPillow\nPilot\nPinch\nPing\nPinwheel\nPirate\nPlaid\nPlan\nPlank\nPlate\nPlatypus\nPlayground\nPlow\nPlumber\nPocket\nPoem\nPoint\nPole\nPomp\nPong\nPool\nPopsicle\nPopulation\nPortfolio\nPositive\nPost\nPrincess\nProcrastinate\nProtestant\nPsychologist\nPublisher\nPunk\nPuppet\nPuppy\nPush\nPuzzle\nQuarantine\nQueen\nQuicksand\nQuiet\nRace\nRadio\nRaft\nRag\nRainbow\nRainwater\nRandom\nRay\nRecycle\nRed\nRegret\nReimbursement\nRib\nRiddle\nRim\nRink\nRoller\nRoom\nRose\nRound\nRoundabout\nRung\nRunt\nRut\nSad\nSafe\nSalmon\nSalt\nSandbox\nSandcastle\nSandwich\nSash\nSatellite\nScar\nScared\nSchool\nScoundrel\nScramble\nScuff\nSeashell\nSeason\nSentence\nSequins\nSet\nShaft\nShallow\nShampoo\nShark\nSheep\nSheets\nSheriff\nShipwreck\nShirt\nShoelace\nShort\nShower\nShrink\nSick\nSiesta\nSilhouette\nSinger\nSip\nSkate\nSkating\nSki\nSlam\nSleep\nSling\nSlow\nSlump\nSmith\nSneeze\nSnow\nSnuggle\nSong\nSpace\nSpare\nSpeakers\nSpider\nSpit\nSponge\nSpool\nSpoon\nSpring\nSprinkler\nSpy\nSquare\nSquint\nStairs\nStanding\nStar\nState\nStick\nStockholder\nStoplight\nStout\nStove\nStowaway\nStraw\nStream\nStreamline\nStripe\nStudent\nSun\nSunburn\nSushi\nSwamp\nSwarm\nSweater\nSwimming\nSwing\nTachometer\nTalk\nTaxi\nTeacher\nTeapot\nTeenager\nTelephone\nTen\nTennis\nThief\nThink\nThrone\nThrough\nThunder\nTide\nTiger\nTime\nTinting\nTiptoe\nTiptop\nTired\nTissue\nToast\nToilet\nTool\nToothbrush\nTornado\nTournament\nTractor\nTrain\nTrash\nTreasure\nTree\nTriangle\nTrip\nTruck\nTub\nTuba\nTutor\nTelevision\nTwang\nTwig\nType\nUnemployed\nUpgrade\nVest\nVision\nWag\nWater\nWatermelon\nWax\nWedding\nWeed\nWelder\nWhatever\nWheelchair\nWhiplash\nWhisk\nWhistle\nWhite\nWig\nWill\nWindmill\nWinter\nWish\nWolf\nWool\nWorld\nWorm\nWristwatch\nYardstick\nZamboni\nZen\nZero\nZipper\nZone\nZoo\n`.split('\\n').filter(word => word);\n","const shuffle = (a) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n  }\n\n  return a;\n};\n\nexport default shuffle;\n","import words from './words.js';\nimport shuffle from './shuffle';\n\nconst getRandomTeam = (stateTeamCards) => {\n  const randomTeam = Math.floor(Math.random() * 3) + 1;\n\n  if (!Object.keys(stateTeamCards).some(key => stateTeamCards[key])) {\n    return 0;\n  }\n\n  if (stateTeamCards[randomTeam] > 0) {\n    stateTeamCards[randomTeam] = stateTeamCards[randomTeam] - 1;\n\n    return randomTeam;\n  }\n\n  return getRandomTeam(stateTeamCards);\n}\n\nconst getTeamCards = () => {\n  const firstTeam = Math.floor(Math.random() * 2) + 1;\n\n  return {\n    1: firstTeam === 1 ? 9 : 8,\n    2: firstTeam === 2 ? 9 : 8,\n    3: 1, // Death card\n  };\n};\n\nconst getNewState = () => {\n  const stateTeamCards = getTeamCards();\n  let wordList = words.map((word, index) => index);\n  wordList = shuffle(wordList).slice(0, 25);\n  wordList = wordList\n    .map(index => ({\n      index,\n      team: getRandomTeam(stateTeamCards),\n      active: false,\n    }))\n  wordList = shuffle(wordList);\n\n  const result = {\n    wordList,\n    answerKey: false,\n  };\n\n  saveStateToUrl(result);\n\n  return result;\n};\n\nconst getStateFromUrl = () => {\n  const hash = document.location.search.concat().replace('?', '').split(',');\n  const wordIndex = hash.slice(0, 25);\n  const team = hash.slice(25, 50);\n  const active = hash.slice(50, 75);\n  const wordList = wordIndex.map((wordIndex, index) => ({\n    index: wordIndex,\n    team: parseInt(team[index], 10) - words[wordIndex].length,\n    active: !!parseInt(active[index], 10),\n  }));\n\n  return {\n    wordList,\n    answerKey: !!parseInt(hash[75], 10),\n  }\n};\n\nexport const getStartingState = (newGame = false) => {\n  if (document.location.search && !newGame) {\n    return getStateFromUrl();\n  }\n\n  return getNewState();\n};\n\nexport const stateToHash = ({ wordList, answerKey }) => {\n  const wordIndex = wordList.map(word => word.index).join(',');\n  const teams = wordList.map(word => word.team + words[word.index].length).join(',');\n  const active = wordList.map(word => word.active ? 1 : 0).join(',');\n  const answerKeyBinary = answerKey ? 1 : 0;\n\n  return `${wordIndex},${teams},${active},${answerKeyBinary}`;\n};\n\nexport const saveStateToUrl = (state) => {\n  const newurl = `${document.location.origin}${document.location.pathname}?${stateToHash(state)}`;\n\n  window.history.pushState({ path: newurl }, '', newurl);\n};\n\nexport default null;\n","const copyToClipboard = (str) => {\n  const el = document.createElement('textarea');\n  el.value = str;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n};\n\nexport default copyToClipboard;\n","import React, { Component } from 'react';\nimport {\n  getStartingState, stateToHash, saveStateToUrl,\n} from './util/stateManagement';\nimport clipboard from './util/clipboard';\nimport words from './util/words.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...getStartingState(),\n      linkCopied: false,\n    };\n  }\n\n  componentDidUpdate() {\n    saveStateToUrl(this.state);\n  }\n\n  handleSetActive = (index) => {\n    this.setState((state) => {\n      const wordList = state.wordList.concat();\n\n      wordList[index].active = true;\n\n      return wordList;\n    });\n  };\n\n  handleNewGame = () => {\n    this.setState(getStartingState(true));\n    document.body.className = '';\n  }\n\n  handleCopyCodemasterLink = () => {\n    const { wordList } = this.state;\n\n    clipboard(`${document.location.origin}${document.location.pathname}?${stateToHash({ wordList, answerKey: true })}`);\n    this.setState({ linkCopied: true });\n    setTimeout(() => this.setState({ linkCopied: false }), 2000);\n  };\n\n  render() {\n    const { wordList, answerKey, linkCopied } = this.state;\n\n    const getActiveClass = (team) => {\n      if (team === 1) {\n        return 'one';\n      } else if (team === 2) {\n        return 'two';\n      } else if (team === 3) {\n        return 'death';\n      }\n\n      return 'neutral';\n    };\n\n    const getTeamCardsRemaining = (team) => wordList\n      .filter(word => word.team === team && !word.active).length;\n    const teamOneRemaining = getTeamCardsRemaining(1);\n    const teamTwoRemaining = getTeamCardsRemaining(2);\n    const teamOneWinner = teamOneRemaining === 0;\n    const teamTwoWinner = teamTwoRemaining === 0;\n    const death = getTeamCardsRemaining(3) === 0;\n    const winner = teamOneWinner || teamTwoWinner || death;\n    let title = 'Codenames';\n\n    if (answerKey) {\n      title = 'Codemaster';\n    } else if (death) {\n      title = 'Gameover';\n      document.body.classList.add('death');\n    } else if (winner) {\n      title = 'Congrats!';\n      document.body.classList.add(`winner-${teamOneWinner ? 'one' : 'two'}`);\n    }\n\n    return (\n      <>\n        <header>\n          <span className=\"team-1\">{!answerKey && teamOneRemaining}</span>{title}<span className=\"team-2\">{!answerKey && teamTwoRemaining}</span>\n        </header>\n        <ul className=\"game-board\">\n          {wordList.map((word, index) => (\n            <li key={words[word.index]}>\n              <button\n                type=\"button\"\n                onClick={() => this.handleSetActive(index)}\n                className={word.active || answerKey ? `active-${getActiveClass(word.team)}` : ''}\n                disabled={winner || answerKey}\n              >\n                {words[word.index]}\n              </button>\n            </li>\n          ))}\n        </ul>\n        {!answerKey && (\n          <nav>\n            <button\n              type=\"button\"\n              onClick={this.handleNewGame}\n            >\n              New Game\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.handleCopyCodemasterLink}\n            >\n              {linkCopied ? 'Copied!' : 'Copy Codemaster Link'}\n            </button>\n          </nav>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}